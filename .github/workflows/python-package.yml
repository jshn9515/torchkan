# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14"]

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        enable-cache: true
    - name: Install torchkan package
      run: uv pip install .
    - name: Install testing framework pytest
      run: |
        uv pip install --upgrade pip setuptools
        uv pip install pytest
        if [ -f requirements.txt ]; then uv pip install -r requirements.txt; fi

    - name: Test with pytest
      run: |
        uv pip install pytest pytest-cov
        pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
          --cov=torchkan --cov-report=xml --cov-report=html
    - name: Upload pytest test results
      uses: actions/upload-artifact@v5
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
  
    - name: Install the code linting and formatting tool Ruff
      run: uv pip install ruff
    - name: Lint code with Ruff
      run: ruff check --output-format=github --target-version=py314
    - name: Check code formatting with Ruff
      run: ruff format --diff --target-version=py314
      continue-on-error: true

    - name: Build release distributions
      run: uv build
    - name: Upload distributions
      uses: actions/upload-artifact@v5
      with:
        name: release-dists-${{ matrix.python-version }}
        path: dist/
